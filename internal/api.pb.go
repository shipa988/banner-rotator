// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: api.proto

package api

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ClickEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime         *timestamp.Timestamp `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	PageURL          string               `protobuf:"bytes,2,opt,name=pageURL,proto3" json:"pageURL,omitempty"`
	SlotID           uint64               `protobuf:"varint,3,opt,name=slotID,proto3" json:"slotID,omitempty"`
	BannerID         uint64               `protobuf:"varint,4,opt,name=bannerID,proto3" json:"bannerID,omitempty"`
	GroupDescription string               `protobuf:"bytes,5,opt,name=groupDescription,proto3" json:"groupDescription,omitempty"`
}

func (x *ClickEvent) Reset() {
	*x = ClickEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickEvent) ProtoMessage() {}

func (x *ClickEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickEvent.ProtoReflect.Descriptor instead.
func (*ClickEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *ClickEvent) GetDatetime() *timestamp.Timestamp {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *ClickEvent) GetPageURL() string {
	if x != nil {
		return x.PageURL
	}
	return ""
}

func (x *ClickEvent) GetSlotID() uint64 {
	if x != nil {
		return x.SlotID
	}
	return 0
}

func (x *ClickEvent) GetBannerID() uint64 {
	if x != nil {
		return x.BannerID
	}
	return 0
}

func (x *ClickEvent) GetGroupDescription() string {
	if x != nil {
		return x.GroupDescription
	}
	return ""
}

type ShowEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Datetime         *timestamp.Timestamp `protobuf:"bytes,1,opt,name=datetime,proto3" json:"datetime,omitempty"`
	PageURL          string               `protobuf:"bytes,2,opt,name=pageURL,proto3" json:"pageURL,omitempty"`
	SlotID           uint64               `protobuf:"varint,3,opt,name=slotID,proto3" json:"slotID,omitempty"`
	BannerID         uint64               `protobuf:"varint,4,opt,name=bannerID,proto3" json:"bannerID,omitempty"`
	GroupDescription string               `protobuf:"bytes,5,opt,name=groupDescription,proto3" json:"groupDescription,omitempty"`
}

func (x *ShowEvent) Reset() {
	*x = ShowEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowEvent) ProtoMessage() {}

func (x *ShowEvent) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowEvent.ProtoReflect.Descriptor instead.
func (*ShowEvent) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *ShowEvent) GetDatetime() *timestamp.Timestamp {
	if x != nil {
		return x.Datetime
	}
	return nil
}

func (x *ShowEvent) GetPageURL() string {
	if x != nil {
		return x.PageURL
	}
	return ""
}

func (x *ShowEvent) GetSlotID() uint64 {
	if x != nil {
		return x.SlotID
	}
	return 0
}

func (x *ShowEvent) GetBannerID() uint64 {
	if x != nil {
		return x.BannerID
	}
	return 0
}

func (x *ShowEvent) GetGroupDescription() string {
	if x != nil {
		return x.GroupDescription
	}
	return ""
}

type EventsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*EventsResponse_ShowEvent
	//	*EventsResponse_ClickEvent
	Result isEventsResponse_Result `protobuf_oneof:"result"`
}

func (x *EventsResponse) Reset() {
	*x = EventsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsResponse) ProtoMessage() {}

func (x *EventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsResponse.ProtoReflect.Descriptor instead.
func (*EventsResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

func (m *EventsResponse) GetResult() isEventsResponse_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *EventsResponse) GetShowEvent() *ShowEvent {
	if x, ok := x.GetResult().(*EventsResponse_ShowEvent); ok {
		return x.ShowEvent
	}
	return nil
}

func (x *EventsResponse) GetClickEvent() *ClickEvent {
	if x, ok := x.GetResult().(*EventsResponse_ClickEvent); ok {
		return x.ClickEvent
	}
	return nil
}

type isEventsResponse_Result interface {
	isEventsResponse_Result()
}

type EventsResponse_ShowEvent struct {
	ShowEvent *ShowEvent `protobuf:"bytes,1,opt,name=showEvent,proto3,oneof"`
}

type EventsResponse_ClickEvent struct {
	ClickEvent *ClickEvent `protobuf:"bytes,2,opt,name=clickEvent,proto3,oneof"`
}

func (*EventsResponse_ShowEvent) isEventsResponse_Result() {}

func (*EventsResponse_ClickEvent) isEventsResponse_Result() {}

type EventsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageURL string `protobuf:"bytes,1,opt,name=pageURL,proto3" json:"pageURL,omitempty"`
}

func (x *EventsRequest) Reset() {
	*x = EventsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EventsRequest) ProtoMessage() {}

func (x *EventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EventsRequest.ProtoReflect.Descriptor instead.
func (*EventsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

func (x *EventsRequest) GetPageURL() string {
	if x != nil {
		return x.PageURL
	}
	return ""
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xbe, 0x01, 0x0a,
	0x0a, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xbd, 0x01,
	0x0a, 0x09, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x64,
	0x61, 0x74, 0x65, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x64, 0x61, 0x74, 0x65, 0x74,
	0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73,
	0x6c, 0x6f, 0x74, 0x49, 0x44, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x44, 0x12, 0x2a, 0x0a, 0x10, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72, 0x6f,
	0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x75, 0x0a,
	0x0e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x2a, 0x0a, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x0a, 0x63,
	0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0b, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x63, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x22, 0x29, 0x0a, 0x0d, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x52, 0x4c, 0x32,
	0x50, 0x0a, 0x14, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x62, 0x65, 0x4f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0e, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x45,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30,
	0x01, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_api_proto_goTypes = []interface{}{
	(*ClickEvent)(nil),          // 0: ClickEvent
	(*ShowEvent)(nil),           // 1: ShowEvent
	(*EventsResponse)(nil),      // 2: EventsResponse
	(*EventsRequest)(nil),       // 3: EventsRequest
	(*timestamp.Timestamp)(nil), // 4: google.protobuf.Timestamp
}
var file_api_proto_depIdxs = []int32{
	4, // 0: ClickEvent.datetime:type_name -> google.protobuf.Timestamp
	4, // 1: ShowEvent.datetime:type_name -> google.protobuf.Timestamp
	1, // 2: EventsResponse.showEvent:type_name -> ShowEvent
	0, // 3: EventsResponse.clickEvent:type_name -> ClickEvent
	3, // 4: BannerRotatorService.SubscribeOnEvents:input_type -> EventsRequest
	2, // 5: BannerRotatorService.SubscribeOnEvents:output_type -> EventsResponse
	5, // [5:6] is the sub-list for method output_type
	4, // [4:5] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EventsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_api_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*EventsResponse_ShowEvent)(nil),
		(*EventsResponse_ClickEvent)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BannerRotatorServiceClient is the client API for BannerRotatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BannerRotatorServiceClient interface {
	SubscribeOnEvents(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (BannerRotatorService_SubscribeOnEventsClient, error)
}

type bannerRotatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBannerRotatorServiceClient(cc grpc.ClientConnInterface) BannerRotatorServiceClient {
	return &bannerRotatorServiceClient{cc}
}

func (c *bannerRotatorServiceClient) SubscribeOnEvents(ctx context.Context, in *EventsRequest, opts ...grpc.CallOption) (BannerRotatorService_SubscribeOnEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BannerRotatorService_serviceDesc.Streams[0], "/BannerRotatorService/SubscribeOnEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &bannerRotatorServiceSubscribeOnEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BannerRotatorService_SubscribeOnEventsClient interface {
	Recv() (*EventsResponse, error)
	grpc.ClientStream
}

type bannerRotatorServiceSubscribeOnEventsClient struct {
	grpc.ClientStream
}

func (x *bannerRotatorServiceSubscribeOnEventsClient) Recv() (*EventsResponse, error) {
	m := new(EventsResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// BannerRotatorServiceServer is the server API for BannerRotatorService service.
type BannerRotatorServiceServer interface {
	SubscribeOnEvents(*EventsRequest, BannerRotatorService_SubscribeOnEventsServer) error
}

// UnimplementedBannerRotatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBannerRotatorServiceServer struct {
}

func (*UnimplementedBannerRotatorServiceServer) SubscribeOnEvents(*EventsRequest, BannerRotatorService_SubscribeOnEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeOnEvents not implemented")
}

func RegisterBannerRotatorServiceServer(s *grpc.Server, srv BannerRotatorServiceServer) {
	s.RegisterService(&_BannerRotatorService_serviceDesc, srv)
}

func _BannerRotatorService_SubscribeOnEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(EventsRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BannerRotatorServiceServer).SubscribeOnEvents(m, &bannerRotatorServiceSubscribeOnEventsServer{stream})
}

type BannerRotatorService_SubscribeOnEventsServer interface {
	Send(*EventsResponse) error
	grpc.ServerStream
}

type bannerRotatorServiceSubscribeOnEventsServer struct {
	grpc.ServerStream
}

func (x *bannerRotatorServiceSubscribeOnEventsServer) Send(m *EventsResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _BannerRotatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BannerRotatorService",
	HandlerType: (*BannerRotatorServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeOnEvents",
			Handler:       _BannerRotatorService_SubscribeOnEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
