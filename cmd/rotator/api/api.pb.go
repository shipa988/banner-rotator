// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.12.3
// source: api.proto

package grpcservice

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Stat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageUrl          string `protobuf:"bytes,2,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId           uint64 `protobuf:"varint,3,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	BannerId         uint64 `protobuf:"varint,4,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	GroupDescription string `protobuf:"bytes,5,opt,name=group_description,json=groupDescription,proto3" json:"group_description,omitempty"`
	ClickCount       uint64 `protobuf:"varint,6,opt,name=click_count,json=clickCount,proto3" json:"click_count,omitempty"`
	ShowCount        uint64 `protobuf:"varint,7,opt,name=show_count,json=showCount,proto3" json:"show_count,omitempty"`
}

func (x *Stat) Reset() {
	*x = Stat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stat) ProtoMessage() {}

func (x *Stat) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stat.ProtoReflect.Descriptor instead.
func (*Stat) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{0}
}

func (x *Stat) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *Stat) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *Stat) GetBannerId() uint64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *Stat) GetGroupDescription() string {
	if x != nil {
		return x.GroupDescription
	}
	return ""
}

func (x *Stat) GetClickCount() uint64 {
	if x != nil {
		return x.ClickCount
	}
	return 0
}

func (x *Stat) GetShowCount() uint64 {
	if x != nil {
		return x.ShowCount
	}
	return 0
}

type StatResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time *timestamp.Timestamp `protobuf:"bytes,1,opt,name=time,proto3" json:"time,omitempty"`
	Stat []*Stat              `protobuf:"bytes,2,rep,name=stat,proto3" json:"stat,omitempty"`
}

func (x *StatResponse) Reset() {
	*x = StatResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatResponse) ProtoMessage() {}

func (x *StatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatResponse.ProtoReflect.Descriptor instead.
func (*StatResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{1}
}

func (x *StatResponse) GetTime() *timestamp.Timestamp {
	if x != nil {
		return x.Time
	}
	return nil
}

func (x *StatResponse) GetStat() []*Stat {
	if x != nil {
		return x.Stat
	}
	return nil
}

type StatRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
}

func (x *StatRequest) Reset() {
	*x = StatRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatRequest) ProtoMessage() {}

func (x *StatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatRequest.ProtoReflect.Descriptor instead.
func (*StatRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{2}
}

// Deprecated: Do not use.
func (x *StatRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

type RegisterSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl         string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId          uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	SlotDescription string `protobuf:"bytes,3,opt,name=slot_description,json=slotDescription,proto3" json:"slot_description,omitempty"`
}

func (x *RegisterSlotRequest) Reset() {
	*x = RegisterSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterSlotRequest) ProtoMessage() {}

func (x *RegisterSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterSlotRequest.ProtoReflect.Descriptor instead.
func (*RegisterSlotRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{3}
}

// Deprecated: Do not use.
func (x *RegisterSlotRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *RegisterSlotRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *RegisterSlotRequest) GetSlotDescription() string {
	if x != nil {
		return x.SlotDescription
	}
	return ""
}

type DeleteSlotRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId  uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *DeleteSlotRequest) Reset() {
	*x = DeleteSlotRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteSlotRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteSlotRequest) ProtoMessage() {}

func (x *DeleteSlotRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteSlotRequest.ProtoReflect.Descriptor instead.
func (*DeleteSlotRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{4}
}

// Deprecated: Do not use.
func (x *DeleteSlotRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *DeleteSlotRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type RegisterBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl           string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId            uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	BannerId          uint64 `protobuf:"varint,3,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	BannerDescription string `protobuf:"bytes,4,opt,name=banner_description,json=bannerDescription,proto3" json:"banner_description,omitempty"`
}

func (x *RegisterBannerRequest) Reset() {
	*x = RegisterBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterBannerRequest) ProtoMessage() {}

func (x *RegisterBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterBannerRequest.ProtoReflect.Descriptor instead.
func (*RegisterBannerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{5}
}

// Deprecated: Do not use.
func (x *RegisterBannerRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *RegisterBannerRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *RegisterBannerRequest) GetBannerId() uint64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *RegisterBannerRequest) GetBannerDescription() string {
	if x != nil {
		return x.BannerDescription
	}
	return ""
}

type DeleteBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl  string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId   uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	BannerId uint64 `protobuf:"varint,3,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
}

func (x *DeleteBannerRequest) Reset() {
	*x = DeleteBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteBannerRequest) ProtoMessage() {}

func (x *DeleteBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteBannerRequest.ProtoReflect.Descriptor instead.
func (*DeleteBannerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{6}
}

// Deprecated: Do not use.
func (x *DeleteBannerRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *DeleteBannerRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *DeleteBannerRequest) GetBannerId() uint64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

type DeleteAllBannersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId  uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
}

func (x *DeleteAllBannersRequest) Reset() {
	*x = DeleteAllBannersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllBannersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllBannersRequest) ProtoMessage() {}

func (x *DeleteAllBannersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllBannersRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllBannersRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{7}
}

// Deprecated: Do not use.
func (x *DeleteAllBannersRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *DeleteAllBannersRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

type DeleteAllSlotsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
}

func (x *DeleteAllSlotsRequest) Reset() {
	*x = DeleteAllSlotsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteAllSlotsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAllSlotsRequest) ProtoMessage() {}

func (x *DeleteAllSlotsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAllSlotsRequest.ProtoReflect.Descriptor instead.
func (*DeleteAllSlotsRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{8}
}

// Deprecated: Do not use.
func (x *DeleteAllSlotsRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

type ClickRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl  string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId   uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	BannerId uint64 `protobuf:"varint,3,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
	UserAge  uint64 `protobuf:"varint,4,opt,name=user_age,json=userAge,proto3" json:"user_age,omitempty"`
	UserSex  string `protobuf:"bytes,5,opt,name=user_sex,json=userSex,proto3" json:"user_sex,omitempty"`
}

func (x *ClickRequest) Reset() {
	*x = ClickRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClickRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClickRequest) ProtoMessage() {}

func (x *ClickRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClickRequest.ProtoReflect.Descriptor instead.
func (*ClickRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{9}
}

// Deprecated: Do not use.
func (x *ClickRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *ClickRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *ClickRequest) GetBannerId() uint64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

func (x *ClickRequest) GetUserAge() uint64 {
	if x != nil {
		return x.UserAge
	}
	return 0
}

func (x *ClickRequest) GetUserSex() string {
	if x != nil {
		return x.UserSex
	}
	return ""
}

type GetNextBannerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Deprecated: Do not use.
	PageUrl string `protobuf:"bytes,1,opt,name=page_url,json=pageUrl,proto3" json:"page_url,omitempty"`
	SlotId  uint64 `protobuf:"varint,2,opt,name=slot_id,json=slotId,proto3" json:"slot_id,omitempty"`
	UserAge uint64 `protobuf:"varint,3,opt,name=user_age,json=userAge,proto3" json:"user_age,omitempty"`
	UserSex string `protobuf:"bytes,4,opt,name=user_sex,json=userSex,proto3" json:"user_sex,omitempty"`
}

func (x *GetNextBannerRequest) Reset() {
	*x = GetNextBannerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextBannerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextBannerRequest) ProtoMessage() {}

func (x *GetNextBannerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextBannerRequest.ProtoReflect.Descriptor instead.
func (*GetNextBannerRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{10}
}

// Deprecated: Do not use.
func (x *GetNextBannerRequest) GetPageUrl() string {
	if x != nil {
		return x.PageUrl
	}
	return ""
}

func (x *GetNextBannerRequest) GetSlotId() uint64 {
	if x != nil {
		return x.SlotId
	}
	return 0
}

func (x *GetNextBannerRequest) GetUserAge() uint64 {
	if x != nil {
		return x.UserAge
	}
	return 0
}

func (x *GetNextBannerRequest) GetUserSex() string {
	if x != nil {
		return x.UserSex
	}
	return ""
}

type GetNextBannerResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BannerId uint64 `protobuf:"varint,1,opt,name=banner_id,json=bannerId,proto3" json:"banner_id,omitempty"`
}

func (x *GetNextBannerResponse) Reset() {
	*x = GetNextBannerResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNextBannerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNextBannerResponse) ProtoMessage() {}

func (x *GetNextBannerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNextBannerResponse.ProtoReflect.Descriptor instead.
func (*GetNextBannerResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_rawDescGZIP(), []int{11}
}

func (x *GetNextBannerResponse) GetBannerId() uint64 {
	if x != nil {
		return x.BannerId
	}
	return 0
}

var File_api_proto protoreflect.FileDescriptor

var file_api_proto_rawDesc = []byte{
	0x0a, 0x09, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d,
	0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xc4, 0x01, 0x0a, 0x04, 0x53, 0x74, 0x61, 0x74,
	0x12, 0x19, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c,
	0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x2b, 0x0a, 0x11, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x67, 0x72,
	0x6f, 0x75, 0x70, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f,
	0x0a, 0x0b, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x0a, 0x63, 0x6c, 0x69, 0x63, 0x6b, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x1d, 0x0a, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x09, 0x73, 0x68, 0x6f, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x59,
	0x0a, 0x0c, 0x53, 0x74, 0x61, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x19,
	0x0a, 0x04, 0x73, 0x74, 0x61, 0x74, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x53,
	0x74, 0x61, 0x74, 0x52, 0x04, 0x73, 0x74, 0x61, 0x74, 0x22, 0x2c, 0x0a, 0x0b, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x78, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x73, 0x6c, 0x6f, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x4b, 0x0a, 0x11, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61,
	0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x9b,
	0x01, 0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x2d, 0x0a,
	0x12, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6a, 0x0a, 0x13,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x62,
	0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x51, 0x0a, 0x17, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a, 0x15, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x22, 0x99, 0x01, 0x0a, 0x0c, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x70, 0x61, 0x67, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x41, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x78,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x78, 0x22,
	0x84, 0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07,
	0x70, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x17, 0x0a, 0x07, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x73, 0x6c, 0x6f, 0x74, 0x49, 0x64,
	0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x41, 0x67, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x73, 0x65, 0x78, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75,
	0x73, 0x65, 0x72, 0x53, 0x65, 0x78, 0x22, 0x34, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x08, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x32, 0xfb, 0x08, 0x0a,
	0x14, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x6f, 0x74, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x55, 0x0a, 0x11, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x4f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x0c, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x12,
	0x10, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x7d, 0x5a, 0x07, 0x12, 0x05, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x30, 0x01, 0x12, 0x78, 0x0a, 0x0c,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x12, 0x14, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x53, 0x6c, 0x6f, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x34, 0x22, 0x1b, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a,
	0x01, 0x2a, 0x5a, 0x12, 0x22, 0x10, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x6c,
	0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x98, 0x01, 0x0a, 0x0e, 0x52, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x12, 0x16, 0x2e, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x56, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x50, 0x22, 0x29, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d,
	0x2f, 0x7b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x5a,
	0x20, 0x22, 0x1e, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64,
	0x7d, 0x12, 0x91, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e,
	0x65, 0x72, 0x12, 0x14, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x42, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x53, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x4d, 0x2a, 0x29, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73,
	0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x7d, 0x5a, 0x20, 0x2a, 0x1e, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x2f,
	0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x6e, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x71, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53,
	0x6c, 0x6f, 0x74, 0x12, 0x12, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x6c, 0x6f, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22,
	0x37, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x31, 0x2a, 0x1b, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2f,
	0x7b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74,
	0x5f, 0x69, 0x64, 0x7d, 0x5a, 0x12, 0x2a, 0x10, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2f, 0x7b,
	0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x65, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x12, 0x16, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x53, 0x6c, 0x6f, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x1d, 0x2a, 0x11, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x5a, 0x08, 0x2a, 0x06, 0x2f, 0x73, 0x6c, 0x6f, 0x74, 0x73, 0x12,
	0x81, 0x01, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c, 0x42, 0x61, 0x6e,
	0x6e, 0x65, 0x72, 0x73, 0x12, 0x18, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x6c, 0x6c,
	0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x3b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x35, 0x2a, 0x1d,
	0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75,
	0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x5a, 0x14, 0x2a,
	0x12, 0x2f, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x73, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x12, 0x89, 0x01, 0x0a, 0x0a, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x45, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x0d, 0x2e, 0x43, 0x6c, 0x69, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x54, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x4e, 0x22, 0x28, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65,
	0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x2f,
	0x7b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x5a, 0x1f,
	0x22, 0x1d, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x2f, 0x7b, 0x62, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12,
	0x79, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x12, 0x15, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78, 0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x78,
	0x74, 0x42, 0x61, 0x6e, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x39, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x33, 0x12, 0x1c, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x7d, 0x2f, 0x7b, 0x73, 0x6c, 0x6f,
	0x74, 0x5f, 0x69, 0x64, 0x7d, 0x5a, 0x13, 0x12, 0x11, 0x2f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73,
	0x2f, 0x7b, 0x73, 0x6c, 0x6f, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x3b,
	0x67, 0x72, 0x70, 0x63, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_api_proto_rawDescOnce sync.Once
	file_api_proto_rawDescData = file_api_proto_rawDesc
)

func file_api_proto_rawDescGZIP() []byte {
	file_api_proto_rawDescOnce.Do(func() {
		file_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_proto_rawDescData)
	})
	return file_api_proto_rawDescData
}

var file_api_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_api_proto_goTypes = []interface{}{
	(*Stat)(nil),                    // 0: Stat
	(*StatResponse)(nil),            // 1: StatResponse
	(*StatRequest)(nil),             // 2: StatRequest
	(*RegisterSlotRequest)(nil),     // 3: RegisterSlotRequest
	(*DeleteSlotRequest)(nil),       // 4: DeleteSlotRequest
	(*RegisterBannerRequest)(nil),   // 5: RegisterBannerRequest
	(*DeleteBannerRequest)(nil),     // 6: DeleteBannerRequest
	(*DeleteAllBannersRequest)(nil), // 7: DeleteAllBannersRequest
	(*DeleteAllSlotsRequest)(nil),   // 8: DeleteAllSlotsRequest
	(*ClickRequest)(nil),            // 9: ClickRequest
	(*GetNextBannerRequest)(nil),    // 10: GetNextBannerRequest
	(*GetNextBannerResponse)(nil),   // 11: GetNextBannerResponse
	(*timestamp.Timestamp)(nil),     // 12: google.protobuf.Timestamp
	(*empty.Empty)(nil),             // 13: google.protobuf.Empty
}
var file_api_proto_depIdxs = []int32{
	12, // 0: StatResponse.time:type_name -> google.protobuf.Timestamp
	0,  // 1: StatResponse.stat:type_name -> Stat
	2,  // 2: BannerRotatorService.SubscribeOnEvents:input_type -> StatRequest
	3,  // 3: BannerRotatorService.RegisterSlot:input_type -> RegisterSlotRequest
	5,  // 4: BannerRotatorService.RegisterBanner:input_type -> RegisterBannerRequest
	6,  // 5: BannerRotatorService.DeleteBanner:input_type -> DeleteBannerRequest
	4,  // 6: BannerRotatorService.DeleteSlot:input_type -> DeleteSlotRequest
	8,  // 7: BannerRotatorService.DeleteAllSlots:input_type -> DeleteAllSlotsRequest
	7,  // 8: BannerRotatorService.DeleteAllBanners:input_type -> DeleteAllBannersRequest
	9,  // 9: BannerRotatorService.ClickEvent:input_type -> ClickRequest
	10, // 10: BannerRotatorService.GetNextBanner:input_type -> GetNextBannerRequest
	1,  // 11: BannerRotatorService.SubscribeOnEvents:output_type -> StatResponse
	13, // 12: BannerRotatorService.RegisterSlot:output_type -> google.protobuf.Empty
	13, // 13: BannerRotatorService.RegisterBanner:output_type -> google.protobuf.Empty
	13, // 14: BannerRotatorService.DeleteBanner:output_type -> google.protobuf.Empty
	13, // 15: BannerRotatorService.DeleteSlot:output_type -> google.protobuf.Empty
	13, // 16: BannerRotatorService.DeleteAllSlots:output_type -> google.protobuf.Empty
	13, // 17: BannerRotatorService.DeleteAllBanners:output_type -> google.protobuf.Empty
	13, // 18: BannerRotatorService.ClickEvent:output_type -> google.protobuf.Empty
	11, // 19: BannerRotatorService.GetNextBanner:output_type -> GetNextBannerResponse
	11, // [11:20] is the sub-list for method output_type
	2,  // [2:11] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_api_proto_init() }
func file_api_proto_init() {
	if File_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteSlotRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllBannersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteAllSlotsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClickRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextBannerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNextBannerResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_goTypes,
		DependencyIndexes: file_api_proto_depIdxs,
		MessageInfos:      file_api_proto_msgTypes,
	}.Build()
	File_api_proto = out.File
	file_api_proto_rawDesc = nil
	file_api_proto_goTypes = nil
	file_api_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// BannerRotatorServiceClient is the client API for BannerRotatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type BannerRotatorServiceClient interface {
	SubscribeOnEvents(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (BannerRotatorService_SubscribeOnEventsClient, error)
	RegisterSlot(ctx context.Context, in *RegisterSlotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	RegisterBanner(ctx context.Context, in *RegisterBannerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteBanner(ctx context.Context, in *DeleteBannerRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteSlot(ctx context.Context, in *DeleteSlotRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteAllSlots(ctx context.Context, in *DeleteAllSlotsRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	DeleteAllBanners(ctx context.Context, in *DeleteAllBannersRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	ClickEvent(ctx context.Context, in *ClickRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	GetNextBanner(ctx context.Context, in *GetNextBannerRequest, opts ...grpc.CallOption) (*GetNextBannerResponse, error)
}

type bannerRotatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewBannerRotatorServiceClient(cc grpc.ClientConnInterface) BannerRotatorServiceClient {
	return &bannerRotatorServiceClient{cc}
}

func (c *bannerRotatorServiceClient) SubscribeOnEvents(ctx context.Context, in *StatRequest, opts ...grpc.CallOption) (BannerRotatorService_SubscribeOnEventsClient, error) {
	stream, err := c.cc.NewStream(ctx, &_BannerRotatorService_serviceDesc.Streams[0], "/BannerRotatorService/SubscribeOnEvents", opts...)
	if err != nil {
		return nil, err
	}
	x := &bannerRotatorServiceSubscribeOnEventsClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type BannerRotatorService_SubscribeOnEventsClient interface {
	Recv() (*StatResponse, error)
	grpc.ClientStream
}

type bannerRotatorServiceSubscribeOnEventsClient struct {
	grpc.ClientStream
}

func (x *bannerRotatorServiceSubscribeOnEventsClient) Recv() (*StatResponse, error) {
	m := new(StatResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *bannerRotatorServiceClient) RegisterSlot(ctx context.Context, in *RegisterSlotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/RegisterSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) RegisterBanner(ctx context.Context, in *RegisterBannerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/RegisterBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) DeleteBanner(ctx context.Context, in *DeleteBannerRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/DeleteBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) DeleteSlot(ctx context.Context, in *DeleteSlotRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/DeleteSlot", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) DeleteAllSlots(ctx context.Context, in *DeleteAllSlotsRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/DeleteAllSlots", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) DeleteAllBanners(ctx context.Context, in *DeleteAllBannersRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/DeleteAllBanners", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) ClickEvent(ctx context.Context, in *ClickRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/ClickEvent", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bannerRotatorServiceClient) GetNextBanner(ctx context.Context, in *GetNextBannerRequest, opts ...grpc.CallOption) (*GetNextBannerResponse, error) {
	out := new(GetNextBannerResponse)
	err := c.cc.Invoke(ctx, "/BannerRotatorService/GetNextBanner", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// BannerRotatorServiceServer is the server API for BannerRotatorService service.
type BannerRotatorServiceServer interface {
	SubscribeOnEvents(*StatRequest, BannerRotatorService_SubscribeOnEventsServer) error
	RegisterSlot(context.Context, *RegisterSlotRequest) (*empty.Empty, error)
	RegisterBanner(context.Context, *RegisterBannerRequest) (*empty.Empty, error)
	DeleteBanner(context.Context, *DeleteBannerRequest) (*empty.Empty, error)
	DeleteSlot(context.Context, *DeleteSlotRequest) (*empty.Empty, error)
	DeleteAllSlots(context.Context, *DeleteAllSlotsRequest) (*empty.Empty, error)
	DeleteAllBanners(context.Context, *DeleteAllBannersRequest) (*empty.Empty, error)
	ClickEvent(context.Context, *ClickRequest) (*empty.Empty, error)
	GetNextBanner(context.Context, *GetNextBannerRequest) (*GetNextBannerResponse, error)
}

// UnimplementedBannerRotatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedBannerRotatorServiceServer struct {
}

func (*UnimplementedBannerRotatorServiceServer) SubscribeOnEvents(*StatRequest, BannerRotatorService_SubscribeOnEventsServer) error {
	return status.Errorf(codes.Unimplemented, "method SubscribeOnEvents not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) RegisterSlot(context.Context, *RegisterSlotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterSlot not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) RegisterBanner(context.Context, *RegisterBannerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RegisterBanner not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) DeleteBanner(context.Context, *DeleteBannerRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteBanner not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) DeleteSlot(context.Context, *DeleteSlotRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSlot not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) DeleteAllSlots(context.Context, *DeleteAllSlotsRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllSlots not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) DeleteAllBanners(context.Context, *DeleteAllBannersRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteAllBanners not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) ClickEvent(context.Context, *ClickRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ClickEvent not implemented")
}
func (*UnimplementedBannerRotatorServiceServer) GetNextBanner(context.Context, *GetNextBannerRequest) (*GetNextBannerResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetNextBanner not implemented")
}

func RegisterBannerRotatorServiceServer(s *grpc.Server, srv BannerRotatorServiceServer) {
	s.RegisterService(&_BannerRotatorService_serviceDesc, srv)
}

func _BannerRotatorService_SubscribeOnEvents_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(StatRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(BannerRotatorServiceServer).SubscribeOnEvents(m, &bannerRotatorServiceSubscribeOnEventsServer{stream})
}

type BannerRotatorService_SubscribeOnEventsServer interface {
	Send(*StatResponse) error
	grpc.ServerStream
}

type bannerRotatorServiceSubscribeOnEventsServer struct {
	grpc.ServerStream
}

func (x *bannerRotatorServiceSubscribeOnEventsServer) Send(m *StatResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _BannerRotatorService_RegisterSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).RegisterSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/RegisterSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).RegisterSlot(ctx, req.(*RegisterSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_RegisterBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).RegisterBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/RegisterBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).RegisterBanner(ctx, req.(*RegisterBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_DeleteBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).DeleteBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/DeleteBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).DeleteBanner(ctx, req.(*DeleteBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_DeleteSlot_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSlotRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).DeleteSlot(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/DeleteSlot",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).DeleteSlot(ctx, req.(*DeleteSlotRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_DeleteAllSlots_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllSlotsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).DeleteAllSlots(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/DeleteAllSlots",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).DeleteAllSlots(ctx, req.(*DeleteAllSlotsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_DeleteAllBanners_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteAllBannersRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).DeleteAllBanners(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/DeleteAllBanners",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).DeleteAllBanners(ctx, req.(*DeleteAllBannersRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_ClickEvent_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ClickRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).ClickEvent(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/ClickEvent",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).ClickEvent(ctx, req.(*ClickRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _BannerRotatorService_GetNextBanner_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetNextBannerRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BannerRotatorServiceServer).GetNextBanner(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/BannerRotatorService/GetNextBanner",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BannerRotatorServiceServer).GetNextBanner(ctx, req.(*GetNextBannerRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _BannerRotatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "BannerRotatorService",
	HandlerType: (*BannerRotatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterSlot",
			Handler:    _BannerRotatorService_RegisterSlot_Handler,
		},
		{
			MethodName: "RegisterBanner",
			Handler:    _BannerRotatorService_RegisterBanner_Handler,
		},
		{
			MethodName: "DeleteBanner",
			Handler:    _BannerRotatorService_DeleteBanner_Handler,
		},
		{
			MethodName: "DeleteSlot",
			Handler:    _BannerRotatorService_DeleteSlot_Handler,
		},
		{
			MethodName: "DeleteAllSlots",
			Handler:    _BannerRotatorService_DeleteAllSlots_Handler,
		},
		{
			MethodName: "DeleteAllBanners",
			Handler:    _BannerRotatorService_DeleteAllBanners_Handler,
		},
		{
			MethodName: "ClickEvent",
			Handler:    _BannerRotatorService_ClickEvent_Handler,
		},
		{
			MethodName: "GetNextBanner",
			Handler:    _BannerRotatorService_GetNextBanner_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "SubscribeOnEvents",
			Handler:       _BannerRotatorService_SubscribeOnEvents_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "api.proto",
}
